extends templates/template.jade
block title
	title Nuevo Niñ@ en ¡Not Down, Yes Up!
block exit
	button
		a(href='/admin/menu-admin') VOLVER
block content
	-if (data)
		-var edit = true
		-var classFormValid = "hide"
		-var mom = data.parents.mom
		-var dad = data.parents.dad
		-var cure = data.parents.cure
		-var children = data.children
	-else
		-var edit = false
		-var mom = {}
		-var dad = {}
		-var cure = {}
		-var children = {}
		-var classForm = "hide"
		-var classFormValid = "show"
	
	section.register
		h3(class="#{classFormValid}") Niñ@s Nuev@s
		article
			form#formValidChildren(class="#{classFormValid}")
				fieldset.data.validChildren
					legend ¡Maravilloso! ¿Qué niñ@ conoceremos hoy?
					article
						input#validChildren(type='number', name='validChildren', min='1000', placeholder='Número Identificación', autocomplete = "off" required data-valid-id-exists="true,false")
					article
						button(type='submit')
							span Iniciar Registro
				
			form#formAddChildren(class="#{classForm}" action="" method="POST" enctype="multipart/form-data")
				input(type="hidden" value="#{edit}" id="editingChildren" name="editingChildren")
				fieldset.children.data
					legend Niñ@
					section
						fieldset
							legend Personal
							if (edit)
								input.idChildren#idChildren(type='number', name='children[idChildren]' value="#{children.idChildren}" autocomplete = "off")
							else
								input.idChildren#idChildren(type='number', name='children[idChildren]' value="#{children.idChildren}", readonly)
							input#nameChildren(type='text', name='children[nameChildren]' value="#{children.nameChildren}", placeholder='Nombres Niñ@', autocomplete = "off")
							input#lastnameChildren(type='text', name='children[lastnameChildren]' value="#{children.lastnameChildren}", placeholder='Apellidos Niñ@', autocomplete = "off")
							article.img
								span Foto
								input#imgChildren.inputfile(type='file', name='children[imgChildren]' value="#{children.imgChildren}", accept='image/*' )
							label(for='birthdateChildren') Fecha de Nacimiento
							input#birthdateChildren(type='date' name='children[birthdateChildren]' data-date='#{children.birthdateChildren}')

							input#birthplaceChildren(type='text', name='children[birthplaceChildren]' value="#{children.birthplaceChildren}", placeholder='Lugar de Nacimiento',)
							article
								label(for='ageChildren') Edad en Meses: 
								input#ageChildren(type='number', name='children[ageChildren]' autocomplete = "off" value="#{children.ageChildren}", min='0', max='180')
								label(for='genderChildren') Sexo
								select#genderChildren(name='children[genderChildren]' data-value="#{children.genderChildren}")
									option(value='0', selected='') Niña
									option(value='1') Niño
								label(for='liveSon')  ¿Vive con?
								select#liveSon(name='children[liveSon]' data-value="#{children.liveSon}")
									option(value='0', selected='') Ambos Padres
									option(value='1') Mamá
									option(value='2') Papá
									option(value='3') Otro Cuidador
							article
								input#addressChildren(type='text', name='children[addressChildren]' autocomplete = "off" value="#{children.addressChildren}", placeholder='Dirección',)
								input#districtChildren(type='text', name='children[districtChildren]' autocomplete = "off" value="#{children.districtChildren}", placeholder='Barrio',)
								input#localityChildren(type='text', name='children[localityChildren]' autocomplete = "off" value="#{children.localityChildren}", placeholder='Localidad')
								input#municipalityChildren(type='text', name='children[municipalityChildren]' autocomplete = "off" value="#{children.municipalityChildren}", placeholder='Ciudad/Municipio',)
								input#departamentChildren(type='text', name='children[departamentChildren]' autocomplete = "off" value="#{children.departamentChildren}", placeholder='Departamento',)
								label(for='levelhomeChildren') Estrato de la residencia: 
								input#levelhomeChildren(type='number', name='children[levelhomeChildren]' autocomplete = "off" value="#{children.levelhomeChildren}", min='1', max='6', placeholder='Estrato',)
						fieldset
							legend Salud
							textarea#healthChildren(name='children[healthChildren]' placeholder='Indicaciones de Salud...' autocomplete = "off") #{children.healthChildren}
							article
								input#epsChildren(type='text', name='children[epsChildren]' value="#{children.epsChildren}", placeholder='EPS del niñ@', autocomplete = "off")
							article
								label(for='apbChildren') APB -Organización que cobija al niñ@ (Policia, Ejercito, Sanidad Naval, Fuerza Aérea, Ecopetrol, ETB): 
								input#apbChildren(type='text', name='children[apbChildren]' value="#{children.apbChildren}", placeholder='APB del niño' autocomplete = "off")
							article
								label(for='glassesChildren')  ¿Usa Gafas:?
								select#glassesChildren(name='children[glassesChildren]' data-value="#{children.glassesChildren}")
									option(value='0', selected='') No
									option(value='1') Si
								label(for='hearingaidChildren')  ¿Usa Audífonos:?
								select#hearingaidChildren(name='children[hearingaidChildren]' data-value="#{children.hearingaidChildren}")
									option(value='0', selected='') No
									option(value='1') Si
						fieldset
							legend Habilidades
							textarea#abilityChildren(name='children[abilityChildren]' value="#{children.abilityChildren}" placeholder='Habilidades del niñ@...' autocomplete = "off")
						fieldset
							legend Debilidades
							textarea#debilityChildren(name='children[debilityChildren]' value="#{children.debilityChildren}" placeholder='Debilidades del niñ@...' autocomplete = "off")
				fieldset.mom.data 
					legend Mamá
					section
						fieldset
							legend Personal
							article
								input.idMom#idParent(type='number', name='mom[idParent]', value="#{mom.idParent}" min='1000', placeholder='Cédula Mamita', autocomplete = "off")
								input#idExpeditionParent(type='text', name='mom[idExpeditionParent]', value="#{mom.idExpeditionParent}" placeholder='Lugar de Expedición', autocomplete = "off")
							article
								input#nameParent(type='text', name='mom[nameParent]', value="#{mom.nameParent}" placeholder='Nombres Mamita', autocomplete = "off")
								input#lastnameParent(type='text', name='mom[lastnameParent]', value="#{mom.lastnameParent}" placeholder='Apellidos Mamita', autocomplete = "off")
							article
								label(for='birthdateParent') Fecha de Nacimiento
								input#birthdateParent(type='date' name='mom[birthdateParent]' data-date="#{mom.birthdateParent}")
							article.img
								span Foto
								input#imgParent(type='file', name='mom[imgMom]', value="#{mom.imgParent}" accept='image/*' )
						fieldset
							legend Contacto
							article
								input#telParent(type='number', name='mom[telParent]', value="#{mom.telParent}" min='1000000', max='9999999', placeholder='Teléfono Fijo', autocomplete = "off")
								input#celParent(type='number', name='mom[celParent]', value="#{mom.celParent}" min='1000000000', max='9999999999', placeholder='Celular', autocomplete = "off")
								input#emailParent(type='email', name='mom[emailParent]', value="#{mom.emailParent}" placeholder='correo-mamita@abc.com' autocomplete = "off")
						fieldset
							legend Profesión
							article
								label(for='studyParent') Nivel de Estudios
								select#studyParent(name='mom[studyParent]' data-value="#{mom.studyParent}")
									each level,nombreLevel in CTE.LEVEL_STUDY
										option(value='#{level}') #{parserCustom(level,"LEVEL_STUDY")}

							input#professionParent(type='text', name='mom[professionParent]', value="#{mom.professionParent}" placeholder='Título adquirido' autocomplete = "off")
							input#jobParent(type='text', name='mom[jobParent]', value="#{mom.jobParent}" placeholder='Ocupación' autocomplete = "off")
				fieldset.dad.data
					legend Papá
					section
						fieldset
							legend Personal
							article
								input.idDad#idParent(type='number', name='dad[idParent]', value="#{dad.idParent}" min='1000', placeholder='Cédula Papito', autocomplete = "off")
								input#idExpeditionParent(type='text', name='dad[idExpeditionParent]', value="#{dad.idExpeditionParent}" placeholder='Lugar de Expedición', autocomplete = "off")
							article
								input#nameParent(type='text', name='dad[nameParent]', value="#{dad.nameParent}" placeholder='Nombres Papito', autocomplete = "off")
								input#lastnameParent(type='text', name='dad[lastnameParent]', value="#{dad.lastnameParent}" placeholder='Apellidos Papito', autocomplete = "off")
							article
								label(for='birthdateParent') Fecha de Nacimiento
								input#birthdateParent(type='date' name='dad[birthdateParent]' data-date="#{dad.birthdateParent}")
							article.img
								span Foto
								input#imgParent(type='file', name='dad[imgDad]', value="#{dad.imgParent}" accept='image/*' )
						fieldset
							legend Contacto
							article
								input#telParent(type='number', name='dad[telParent]', value="#{dad.telParent}" min='1000000', max='9999999', placeholder='Teléfono Fijo', autocomplete = "off")
								input#celParent(type='number', name='dad[celParent]', value="#{dad.celParent}" min='1000000000', max='9999999999', placeholder='Celular', autocomplete = "off")
								input#emailParent(type='email', name='dad[emailParent]', value="#{dad.emailParent}" placeholder='correo-papito@abc.com' autocomplete = "off")
						fieldset
							legend Profesión
							article
								label(for='studyParent') Nivel de Estudios
								select#studyParent(name='dad[studyParent]' data-value="#{dad.studyParent}")
									each level,nombreLevel in CTE.LEVEL_STUDY
										option(value='#{level}') #{parserCustom(level,"LEVEL_STUDY")}
										
							input#professionParent(type='text', name='dad[professionParent]', value="#{dad.professionParent}" placeholder='Título adquirido' autocomplete = "off")
							input#jobParent(type='text', name='dad[jobParent]', value="#{dad.jobParent}" placeholder='Ocupación' autocomplete = "off")
				fieldset.care.data
					legend Cuidador
					section
						fieldset
							legend Personal
							article
								input.idCare#idParent(type='number', name="care[idParent]", value="#{cure.idParent}" min='1000', placeholder='Cédula Cuidador', autocomplete = "off")
								input#idExpeditionParent(type='text', name="care[idExpeditionParent]", value="#{cure.idExpeditionParent}" placeholder='Lugar de Expedición', autocomplete = "off")
							article
								input#nameParent(type='text', name="care[nameParent]", value="#{cure.nameParent}" placeholder='Nombres Cuidador', autocomplete = "off")
								input#lastnameParent(type='text', name="care[lastnameParent]", value="#{cure.lastnameParent}" placeholder='Apellidos Cuidador', autocomplete = "off")
							article
								label(for='birthdateParent') Fecha de Nacimiento
								input#birthdateParent(type='date' name='care[birthdateParent]' data-date="#{cure.birthdateParent}")
							article.img
								span Foto
								input#imgParent(type='file', name="care[imgCure]", value="#{cure.imgParent}" accept='image/*' )
						fieldset
							legend Contacto
							article
								input#telParent(type='number', name="care[telParent]", value="#{cure.telParent}" min='1000000', max='9999999', placeholder='Teléfono Fijo', autocomplete = "off")
								input#celParent(type='number', name="care[celParent]", value="#{cure.celParent}" min='1000000000', max='9999999999', placeholder='Celular', autocomplete = "off")
								input#emailParent(type='email', name="care[emailParent]", value="#{cure.emailParent}" placeholder='correo-cuidador@abc.com' autocomplete = "off")

				fieldset.user.data
					legend Confirmar Registro
					section
						if !edit
							button(type='submit' data-action="create")
								span Registrar
						else
							button(type='submit' data-action="edit")
								span Actualizar
						button(type='reset')
							span Limpiar
						button
							a(href='/admin/menu-admin') Cancelar
	
	script(src="/js/app.js")
	script.
		var data = !{JSON.stringify(data)}
		console.log(data)
		
	if(edit)
		script.
			$("[data-value]").each((a,e) => {
				if($(e).data("value")) {
					$(e).val($(e).data("value"))
				}
			})
			$("[data-date]").each((a,e) => {
				if($(e).data("date")){
					$(e).val(new Date($(e).data("date")).toISOString().slice(0,10))
				}
			})
	script.
		$("[value=undefined]").val(function(){
			if(this.value == 'undefined') {
				this.value = " "
			}
		})
